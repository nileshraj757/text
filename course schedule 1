# 207


class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<vector<int>> adj(numCourses);
        vector<int> degree(numCourses);
        
        for(int i=0;i<prerequisites.size();i++)
        {
            adj[prerequisites[i][1]].push_back(prerequisites[i][0]);
            degree[prerequisites[i][0]]++;
            
        }
            queue<int> q;
        for(int i=0;i<degree.size();i++)
        {
            if(degree[i]==0)
            {
                q.push(i);
            }
        }
        int count=0;
        while(!q.empty())
        {
            int curr = q.front();
            q.pop();
            
            for(int i=0;i<adj[curr].size();i++)
            {
                if(--degree[adj[curr][i]]==0)
                    q.push(adj[curr][i]);
            }
            count++;
        }
        
        return count==numCourses;
        
    }
};



/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int lengthA = len(headA);
        int lengthB = len(headB);
        ListNode* t1=headA;
        ListNode* t2 = headB;
        
        if(lengthA>=lengthB)
        {
            int i=0;
            while(i<lengthA-lengthB)
            {
                t1= t1->next;
                i++;
            }
        }
        
        if(lengthB>lengthA)
        {
            int i=0;
            while(i<lengthB-lengthA)
            {
                t2= t2->next;
                i++;
            }
        }
        
        while(t1 || t2)
        {
            if(t1==t2)
                return t1;
            t1=t1->next;
            t2=t2->next;
        }
        return NULL;
    }
    
    
    int len(ListNode* temp)
    {
        int l=0;
        while(temp)
        {
            l++;
            temp=temp->next;
        }
        
        return l;
    }
};

# 421

Method 1 --------------

class Solution {
public:
    int findMaximumXOR(vector<int>& nums) {
        int n = nums.size();
        if(n==1 || n==0)
            return 0;
        if(n==2)
            return nums[0] ^ nums[1];
        int i;
        int j;
        int maxvalue=0;
        vector<int> set1;
        vector<int> set0;
        for( i=31;i>=0;i--)
        {
            for( j=0;j<n;j++)
            {
                if((nums[j]& 1<<i)==0)
                    set0.push_back(nums[j]);
                else
                    set1.push_back(nums[j]);
            }
            
            if(set0.size()!=0 && set1.size()!=0)
            {
                maxvalue = pow(2,i);
                break;
            }
            else{
                set0.clear();
                set1.clear();
            }
        }
        
        if(i==-1)
            return 0;
        
        maxvalue+=helper(set0,set1,i-1);
        return maxvalue;
    }
    
    
    int helper (vector<int>set0,vector<int> set1,int pos)
    {
        vector<int> set0val0;
        vector<int> set0val1;
        vector<int> set1val0;
        vector<int> set1val1;
        int maxval;
        
        if(set0.size()==0 || set1.size()==0 || pos<0)
            return 0;
        
        for(int i=0;i<set0.size();i++)
        {
            if((set0[i]&1<<pos)==0)
                set0val0.push_back(set0[i]);
            else{
                set0val1.push_back(set0[i]);
            }
        }
        for(int i=0;i<set1.size();i++)
        {
            if((set1[i]&1<<pos)==0)
                set1val0.push_back(set1[i]);
            else{
                set1val1.push_back(set1[i]);
            }
        }
        
        
        if(set0val0.size()==0 && set1val0.size()==0)
            maxval = helper(set0,set1,pos-1);
        else if(set1val1.size()==0 && set0val1.size()==0)
            maxval = helper(set0,set1,pos-1);
        else{
            int maxval1 = helper(set0val0,set1val1,pos-1);
            int maxval2 = helper(set1val0,set0val1,pos-1);
            
            maxval = pow(2,pos)+(maxval1>maxval2?maxval1:maxval2);
        }
        
        return maxval;
    }
};

# 662


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int res=0;
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode*,long long>> q;
        q.push({root,0});
        
        while(!q.empty())
        {
            int n = q.size();
            int start= q.front().second;
            int end = q.back().second;
            
            res = max(res,end-start+1);
            
            for(int i=0;i<n;i++)
            {
                auto p = q.front();
                
                int index = p.second -start;
                if(p.first->left)
                {
                    q.push({p.first->left,(long long)2*index});
                }
                if(p.first->right)
                {
                    q.push({p.first->right,(long long)2*index+1});
                }
                q.pop();
            }
        }
        
        return res;
    }
};

# 61

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        ListNode* temp=head;
        int size=0;
        while(temp)
        {
            size++;
            temp=temp->next;
        }
        if(k==0 ||size==0|| size==1 || k%size==0)
            return head;
        
        ListNode* head1;
        ListNode* t=head;
        int curr=1;
        k = k%size;
        
        while(curr<size-k)
        {
            curr++;
            t = t->next;
        }
    
        head1 = t->next;
        t->next = NULL;
        ListNode* last = head1;
        while(last->next)
        {
            last = last->next;
        }
        last->next = head;
        return head1;
    }
};
